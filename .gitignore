*.iml
.gradle
.idea
.DS_Store
build
captures
.externalNativeBuild
.cxx
local.properties
xcuserdata
# Ignore IDE-specific files
.idea/
*.iml
*.ipr
*.iws

# Ignore build output directories
/build/
out/

# Ignore dependency caches
.gradle/
!gradle-wrapper.jar
/.gradle/

# Ignore Maven target directory
/target/

# Ignore Kotlin compile outputs
*.class
*.jar
*.war
*.ear
*.apk
*.dex
*.o
*.so
*.a
*.lo
*.la
*.lib
*.dylib
*.ncb
*.sdf
*.opensdf
*.pdb

# Ignore log files
*.log

# Ignore temporary files
*.swp
*.swo
*.swn
*.bak
*.tmp
*.DS_Store

# Ignore generated files
/generated/
gen/
bin/

# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb
node_modules
package-lock.json
test-results
node_modules

# Output
.output
.vercel
.netlify
.wrangler
/.svelte-kit
/build

# OS
.DS_Store
Thumbs.db

# Env
.env
.env.*
!.env.example
!.env.test

# Vite
vite.config.js.timestamp-*
vite.config.ts.timestamp-*

*storybook.log
